`configure' configures Berkeley DB 5.3.28 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local/BerkeleyDB.5.3]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/BerkeleyDB.5.3/bin', `/usr/local/BerkeleyDB.5.3/lib' etc.  You can specify
an installation prefix other than `/usr/local/BerkeleyDB.5.3' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root
                          [DATAROOTDIR/doc/db-5.3.28]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-smallbuild     Build small footprint version of the library.
  --disable-atomicsupport Do not build any native atomic operation support.
  --disable-bigfile       Obsolete; use --disable-largefile instead.
  --disable-compression   Do not build compression support.
  --disable-hash          Do not build Hash access method.
  --disable-heap          Do not build Heap access method.
  --disable-mutexsupport  Do not build any mutex support.
  --disable-log_checksum  Disable log checksums.
  --disable-partition     Do not build partitioned database support.
  --disable-queue         Do not build Queue access method.
  --disable-replication   Do not build database replication support.
  --disable-statistics    Do not build statistics support.
  --disable-verify        Do not build database verification support.
  --enable-compat185      Build DB 1.85 compatibility API.
  --enable-cxx            Build C++ API.
  --enable-debug          Build a debugging version.
  --enable-debug_rop      Build a version that logs read operations.
  --enable-debug_wop      Build a version that logs write operations.
  --enable-diagnostic     Build a version with run-time diagnostics.
  --enable-dump185        Build db_dump185(1) to dump 1.85 databases.
  --enable-java           Build Java API.
  --enable-mingw          Build Berkeley DB for MinGW.
  --enable-o_direct       Enable the O_DIRECT flag for direct I/O.
  --enable-posixmutexes   Force use of POSIX standard mutexes.

  --enable-sql            Build the SQL API.
  --enable-sql_compat     Build a drop-in replacement sqlite3 library.
  --enable-jdbc           Build BDB SQL JDBC library.
  --enable-amalgamation   Build a SQL amalgamation instead of building files
                          separately.
  --enable-sql_codegen    Build the SQL-to-C code generation tool.
  --enable-stl            Build STL API.
  --enable-tcl            Build Tcl API.
  --enable-test           Configure to run the test suite.
  --enable-localization   Configure to enable localization.
  --enable-stripped_messages
                          Configure to enable stripped messages.
  --enable-dbm            Configure to enable the historic dbm interface.
  --enable-dtrace         Configure to build in dtrace static probes
  --enable-systemtap      Configure to use systemtap to emulate dtrace static
                          probes
  --enable-perfmon-statistics
                          Configure to build in performance monitoring of
                          statistics values [default=no].
  --enable-uimutexes      Force use of Unix International mutexes.
  --enable-umrw           Mask harmless uninitialized memory read/writes.
  --enable-atomicfileread Indicate that the platform reads and writes files
                          atomically.
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-largefile     omit support for large files

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-jdbc=DIR         Specify source directory of JDBC.
  --with-cryptography=yes|no|ipp
                          Build database cryptography support [default=yes].
  --with-mutex=MUTEX      Select non-default mutex implementation.
  --with-mutexalign=ALIGNMENT
                          Obsolete; use DbEnv::mutex_set_align instead.
  --with-stacksize=SIZE   Set the stack size for Berkeley DB threads.
  --with-tcl=DIR          Directory location of tclConfig.sh.
  --with-uniquename=NAME  Build a uniquely named library.
  --with-pic              try to use only PIC/non-PIC objects [default=use
                          both]
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot=DIR Search for dependent libraries within DIR
                        (or the compiler's sysroot if not specified).

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CXXCPP      C++ preprocessor
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <Oracle Technology Network Berkeley DB forum>.
