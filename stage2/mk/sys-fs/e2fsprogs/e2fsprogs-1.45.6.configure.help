`configure' configures this package to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-maintainer-mode enable makefile rules useful for maintainers
  --enable-symlink-install use symlinks when installing instead of hard links
  --enable-relative-symlinks use relative symlinks when installing

  --enable-symlink-build  use symlinks while building instead of hard links
  --enable-verbose-makecmds enable verbose make command output
  --enable-elf-shlibs	  select ELF shared libraries
  --enable-bsd-shlibs	  select BSD shared libraries
  --enable-profile	  build profiling libraries
  --enable-gcov	  	  build for coverage testing using gcov
  --enable-hardening	  	  build for coverage testing using gcov
  --enable-jbd-debug  	  enable journal debugging
  --enable-blkid-debug    enable blkid debugging
  --disable-testio-debug  disable the use of the test I/O manager for debugging
  --enable-libuuid	  build and use private uuid library
  --enable-libblkid	  build and use private blkid library
  --enable-subset  	  enable subset-only build
  --disable-backtrace	  disable use backtrace
  --disable-debugfs   	  disable support of debugfs program
  --disable-imager   	  disable support of e2image program
  --disable-resizer   	  disable support of e2resize program
  --disable-defrag   	  disable support of e4defrag program
  --enable-fsck           build fsck wrapper program
  --enable-e2initrd-helper build e2initrd-helper program
  --disable-tls           disable use of thread local support
  --disable-uuidd         disable building the uuid daemon
  --disable-mmp           disable support mmp, Multi Mount Protection
  --disable-tdb           disable tdb support
  --disable-bmap-stats    disable collection of bitmap stats.
  --enable-bmap-stats-ops enable collection of additional bitmap stats
  --disable-nls           do not use Native Language Support
  --enable-threads={posix|solaris|pth|windows}
                          specify multithreading API
  --disable-threads       build without multithread safety
  --disable-rpath         do not hardcode runtime library paths
  --disable-fuse2fs	  do not build fuse2fs
  --enable-lto		  enable link time optimization
  --enable-ubsan	  enable undefined behavior sanitizer
  --enable-addrsan	  enable address sanitizer
  --enable-threadsan	  enable thread sanitizer

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-diet-libc        use diet libc
  --with-cc               no longer supported, use CC= instead
  --with-ccopts           no longer supported, use CFLAGS= instead
  --with-ldopts           no longer supported, use LDFLAGS= instead
  --with-root-prefix=PREFIX override prefix variable for files to be placed in the root
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-libpth-prefix[=DIR]  search for libpth in DIR/include and DIR/lib
  --without-libpth-prefix     don't search for libpth in includedir and libdir
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-included-gettext use the GNU gettext library included here
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir
  --with-multiarch=ARCH specify the multiarch triplet
  --with-udev-rules-dir[=DIR]
                          Install udev rules into DIR.
  --with-crond-dir[=DIR]  Install system crontabs into DIR.
  --with-systemd-unit-dir[=DIR]
                          Install systemd system units into DIR.

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  udev_CFLAGS C compiler flags for udev, overriding pkg-config
  udev_LIBS   linker flags for udev, overriding pkg-config
  systemd_CFLAGS
              C compiler flags for systemd, overriding pkg-config
  systemd_LIBS
              linker flags for systemd, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.

